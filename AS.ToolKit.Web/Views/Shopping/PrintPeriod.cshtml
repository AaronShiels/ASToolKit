@{
    ViewBag.Title = "PrintPeriod";
    Layout = "~/Views/Shared/_PrintLayout.cshtml";
    var nfi = new CultureInfo(CultureInfo.CurrentCulture.ToString()).NumberFormat;
    nfi.CurrencyNegativePattern = 1;
}

@using System.Globalization
@using AS.ToolKit.Web.Models
@model AS.ToolKit.Web.Models.ShoppingPeriod

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            <h1>Shopping @Model.End.ToString("MMMM yyyy")</h1>
            <h5>@Model.Start.ToString("dd MMMM") - @Model.End.ToString("dd MMMM")</h5>
        </div>
    </div>
    @foreach (var group in Model.ShoppingGroups)
    {
        var standings = group.GetGroupStanding();
        var total = group.ShoppingContributions.Sum(c => c.Amount);
        var average = total/group.ShoppingContributions.Count;
        <div class="row-fluid">
            <div class="span12">
                <h5>Group</h5>
                <table class="table table-condensed">
                    <tr>
                        <th>Person</th>
                        <th>Contribution</th>
                        <th>Required Average</th>
                        <th>Standing</th>
                    </tr>
                    @foreach (var contribution in group.ShoppingContributions)
                    {
                        <tr>
                            <td>
                                @string.Join(" ", new[] {contribution.ShoppingPerson.FirstName, contribution.ShoppingPerson.LastName})
                            </td>
                            <td>
                                @string.Format(nfi, "{0:c}", contribution.Amount)
                            </td>
                            <td>
                                @string.Format(nfi, "{0:c}", average)
                            </td>
                            <td>
                                @string.Format(nfi, "{0:c}", standings[contribution.ShoppingPerson])
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }
    <div class="row-fluid">
        <div class="span12">
            <h5>Total</h5>
            <table class="table table-condensed">
                <tr>
                    <th>Person</th>
                    <th>Contribution</th>
                    <th>Combined Standing</th>
                </tr>
                @{
                    var totalContributions = Model.GetTotalContributions();
                    var totalStandings = Model.GetTotalStanding();
                    foreach (var person in totalContributions.Keys)
                    {
                        <tr>
                            <td>
                                @string.Join(" ", new[] {person.FirstName, person.LastName})
                            </td>
                            <td>
                                @string.Format(nfi, "{0:c}", totalContributions[person])
                            </td>
                            <td>
                                @string.Format(nfi, "{0:c}", totalStandings[person])
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12">
            <h5>Repayment Plan</h5>
            <table class="table table-condensed">
                <tr>
                    <th>Ower</th>
                    <td></td>
                    <th>Owee</th>
                    <th>Amount</th>
                </tr>
                @foreach (var oweVector in Model.GetRepaymentList(totalStandings))
                {
                    <tr>
                        <td>
                            @string.Join(" ", new[] {oweVector.Giver.FirstName, oweVector.Giver.LastName})
                        </td>
                        <td>
                            owes money to
                        </td>
                        <td>
                            @string.Join(" ", new[] {oweVector.Receiver.FirstName, oweVector.Receiver.LastName})
                        </td>
                        <td>
                            @string.Format(nfi, "{0:c}", oweVector.Amount)
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>