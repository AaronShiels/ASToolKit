@{
    ViewBag.Title = "Shopping Calculator";
    ViewBag.Section = "Applications";
}

@using AS.ToolKit.Web.ViewModels
@model AS.ToolKit.Web.ViewModels.IntervalViewModel

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1>@ViewBag.Title</h1>
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Shopping Calculator", "Index", "Shopping")</li>
                <li class="active">@Model.Name</li>
            </ol>
        </div>
    </div>
    @Html.DisplayFor(m => m.Message)
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default" style="max-height: 400px; overflow: auto">
                <div class="panel-heading">Interval Groups</div>
                <div class="list-group">
                    @Html.DisplayFor(m => m.Groups)
                </div>
            </div>
            <button id="btnAddGroup" type="button" class="btn btn-success col-md-12">
                <i class="icon-plus"></i>
                Add New Group
            </button>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Interval Details</div>
                <div class="panel-body">
                    @using (Html.BeginForm("Interval", "Shopping", FormMethod.Post, new {@class = "form-horizontal"}))
                    {
                        @Html.HiddenFor(m => m.IntervalId)
                        <div class="form-group">
                            <label class="control-label col-md-3">Name</label>
                            <div class="col-md-9">
                                <label class="control-label control-label-detail">@Model.Name</label>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Start, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(m => m.Start, new {@class = "form-control"})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.End, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(m => m.End, new {@class = "form-control"})
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Contributors</label>
                            <div class="col-md-9">
                                <label class="control-label control-label-detail">@string.Join(", ", Model.Contributors)</label>   
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Total</label>
                            <div class="col-md-9">
                                <label class="control-label control-label-detail">@Model.CombinedTotal</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-success">
                                    <i class="icon-ok"></i>
                                    Save Changes
                                </button>
                                <button id="btnReset" type="button" class="btn btn-default" data-target="@Html.Raw(Url.Action("Interval", "Shopping", new {intervalId = Model.IntervalId}))">
                                    Reset
                                </button>
                                <button id="btnDeleteInterval" type="button" class="btn btn-danger pull-right">
                                    <i class="icon-remove"></i>
                                    Delete Interval
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div id="divAddGroup" class="modal fade">
    <div class="modal-dialog">
        @Html.Partial("_AddGroup", new AddGroupViewModel
            {
                IntervalId = Model.IntervalId
            })
    </div>
</div>

<div id="divDeleteInterval" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Delete Interval</h4>
            </div>
            <div class="modal-body">
                Are you sure you would like to delete this Shopping Interval "@Model.Name"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    Cancel
                </button>
                <button id="btnDeleteIntervalConfirmed" type="submit" class="btn btn-danger" data-target="@Html.Raw(Url.Action("DeleteInterval", "Shopping", new {intervalId = Model.IntervalId}))">
                    <i class="icon-remove"></i>
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnAddGroup').click(function() {
                $('#divAddGroup').modal();
            });
            $('#btnDeleteInterval').click(function() {
                $('#divDeleteInterval').modal();
            });
            $('[data-target]').click(function () {
                window.location.href = $(this).data('target');
            });
        });
    </script>
}
